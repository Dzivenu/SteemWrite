if (warningMsgObj && warningMsgObj.title && warningMsgObj.body)
    .alert.postWarningAlert.alert-dismissible.alert-warning
        button.close(type='button', onclick!='editorView.dismissWarning(\'' + id + '\');') Ã—
        h4=warningMsgObj.title
        p
            =warningMsgObj.body

div(style='margin-left: auto; margin-right: auto;margin-bottom: 10px;')
    .btn-group.btn-group-justified(role='group', aria-label='...')
        if (postStatus == 'published')
            .btn-group(role='group')
                button.btn.btn-info(type='button', onclick!='editorView.viewOnSteem(\'' + id + '\');')
                    |View Steemit
        else if (postStatus == 'drafts')
            .btn-group(role='group')
                button.btn.btn-info(type='button', onclick!='editorView.saveDraft(\'' + id + '\');')
                    |Save Draft

        .btn-group(role='group')
            button.btn.btn-primary(style=(bodyLen) ? '' : 'display: none;', class='previewPostBtn', type='button', onclick!='editorView.switchMode(\'preview\');')
                =' '
                if (postStatus == 'published')
                    = 'Preview Changes'
                else
                    = 'Preview'

ul
    li
        b
            span.glyphicon.glyphicon-pushpin(aria-hidden='true')
            =' '
            |Status:
        =' '
        if (postStatus == 'published')
            |Published
        else if (postStatus == 'scheduled')
            |Scheduled
        else if (postStatus == 'drafts')
            |Draft
        else if (postStatus == 'trash')
            |Trash

    li
        span.glyphicon.glyphicon-time(aria-hidden='true')
        =' '
        a.sidebarLink(onclick!='editorView.switchMode(\'revisions\')')
            |Post Revisions

    if (autosaveRevison.length > 0)
        li
            span.glyphicon.glyphicon-adjust(aria-hidden='true')
            =' '
            |Local Autosave

    li
        b
            span.glyphicon.glyphicon-user(aria-hidden='true')
            = ' '
            |Author:
            =' '
        =author

        if (postStatus == 'drafts')
        =' '
        button.btn.btn-info.btn-sm(type='button', onclick!='editorView.changeAuthor(\'' + id + '\');')
            |Change

    li
        b
            span.glyphicon.glyphicon-calendar(aria-hidden='true')
            =' '

        if (postStatus == 'published')
            =global.moment.unix(date).tz(global.tz).format('LLLL')

        else if (postStatus == 'scheduled')
            | Scheduled for:
            =' '
            =global.moment.unix(scheduledDate).tz(global.tz).format('LLLL')

            .btn-group.btn-group-justified(role='group', aria-label='...')
                .btn-group(role='group')
                    button.btn.btn-info.btn-sm(type='button', onclick!='editorView.scheduledChangeDate(\'' + id + '\');')
                        |Change date

                .btn-group(role='group')
                    button.btn.btn-Warning.btn-sm(type='button', onclick!='editorView.scheduledCancel(\'' + id + '\');')
                        |Cancel
        else if (postStatus == 'drafts')
            |Publish immediately
            =' '
            button.btn.btn-info.btn-sm(type='button', onclick!='editorView.scheduledSetDate(\'' + id + '\');')
                |Schedule
        else if (postStatus == 'trash')
            |Trash

div(style='margin-left: auto; margin-right: auto;margin-top: 10px;')
    .btn-group.btn-group-justified(role='group', aria-label='...')
        if (postStatus == 'trash')
            .btn-group(role='group')
                button.btn.btn-info(type='button', onclick!='editorView.restoreTrashed(\'' + id + '\');')
                    |Restore as draft

            .btn-group(role='group')
                button.btn.btn-danger(type='button', onclick!='editorView.deleteTrashed(\'' + id + '\');')
                    |Delete Permanently
        else

            if (postStatus == 'published')
                .btn-group(role='group')
                    button.btn.btn-info(type='button', onclick!='editorView.updatePost(\'' + id + '\');')
                        |Update
            else
                .btn-group(role='group')
                    button.btn.btn-info(type='button', onclick!='editorView.publishPost(\'' + id + '\');')
                        |Publish

            .btn-group(role='group')
                button.btn.btn-danger(type='button', onclick!='editorView.trashPost(\'' + id + '\');')
                    |Trash Post
